import{_ as a,c as i,ae as e,o as n}from"./chunks/framework.7dGRS7-m.js";const c=JSON.parse('{"title":"Docker Setup Guide","description":"","frontmatter":{},"headers":[],"relativePath":"guide/docker-setup.md","filePath":"guide/docker-setup.md","lastUpdated":1749499607000}'),t={name:"guide/docker-setup.md"};function l(p,s,o,h,r,d){return n(),i("div",null,s[0]||(s[0]=[e(`<h1 id="docker-setup-guide" tabindex="-1">Docker Setup Guide <a class="header-anchor" href="#docker-setup-guide" aria-label="Permalink to &quot;Docker Setup Guide&quot;">​</a></h1><p>This guide provides detailed instructions for setting up JobBlaster using Docker. Docker containerization ensures consistent environments and simplifies deployment.</p><h2 id="prerequisites" tabindex="-1">Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;Prerequisites&quot;">​</a></h2><ul><li>Docker Engine 20.10.0 or later</li><li>Docker Compose v2.0.0 or later</li><li>Git (for cloning the repository)</li><li>4GB RAM minimum (8GB recommended)</li><li>10GB free disk space</li></ul><h2 id="docker-configuration" tabindex="-1">Docker Configuration <a class="header-anchor" href="#docker-configuration" aria-label="Permalink to &quot;Docker Configuration&quot;">​</a></h2><p>JobBlaster uses a multi-container setup with the following services:</p><ul><li><strong>Frontend</strong>: React application</li><li><strong>Backend</strong>: Node.js API server</li><li><strong>Database</strong>: PostgreSQL</li><li><strong>Redis</strong>: Session and cache management</li><li><strong>Job Crawler</strong>: Background job processing</li></ul><h2 id="step-by-step-setup" tabindex="-1">Step-by-Step Setup <a class="header-anchor" href="#step-by-step-setup" aria-label="Permalink to &quot;Step-by-Step Setup&quot;">​</a></h2><h3 id="_1-clone-the-repository" tabindex="-1">1. Clone the Repository <a class="header-anchor" href="#_1-clone-the-repository" aria-label="Permalink to &quot;1. Clone the Repository&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://github.com/yourusername/JobBlaster.git</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> JobBlaster</span></span></code></pre></div><h3 id="_2-configure-environment-variables" tabindex="-1">2. Configure Environment Variables <a class="header-anchor" href="#_2-configure-environment-variables" aria-label="Permalink to &quot;2. Configure Environment Variables&quot;">​</a></h3><ol><li>Copy the example environment file:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env.example</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> .env</span></span></code></pre></div><ol start="2"><li>Update the following variables in <code>.env</code>:</li></ol><div class="language-env vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span># Docker configuration</span></span>
<span class="line"><span>DOCKER_FRONTEND_PORT=5173</span></span>
<span class="line"><span>DOCKER_BACKEND_PORT=3000</span></span>
<span class="line"><span>DOCKER_POSTGRES_PORT=5432</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Database</span></span>
<span class="line"><span>POSTGRES_USER=jobblaster</span></span>
<span class="line"><span>POSTGRES_PASSWORD=your_secure_password</span></span>
<span class="line"><span>POSTGRES_DB=jobblaster</span></span>
<span class="line"><span></span></span>
<span class="line"><span># API Keys</span></span>
<span class="line"><span>OPENAI_API_KEY=your_openai_api_key</span></span>
<span class="line"><span></span></span>
<span class="line"><span># Redis</span></span>
<span class="line"><span>REDIS_URL=redis://redis:6379</span></span></code></pre></div><h3 id="_3-build-and-start-services" tabindex="-1">3. Build and Start Services <a class="header-anchor" href="#_3-build-and-start-services" aria-label="Permalink to &quot;3. Build and Start Services&quot;">​</a></h3><p>For development:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.dev.yml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><p>For production:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><h3 id="_4-initialize-database" tabindex="-1">4. Initialize Database <a class="header-anchor" href="#_4-initialize-database" aria-label="Permalink to &quot;4. Initialize Database&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Run migrations</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:migrate</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Seed initial data (optional)</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backend</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> npm</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> db:seed</span></span></code></pre></div><h2 id="container-management" tabindex="-1">Container Management <a class="header-anchor" href="#container-management" aria-label="Permalink to &quot;Container Management&quot;">​</a></h2><h3 id="viewing-logs" tabindex="-1">Viewing Logs <a class="header-anchor" href="#viewing-logs" aria-label="Permalink to &quot;Viewing Logs&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># All containers</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Specific service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> logs</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backend</span></span></code></pre></div><h3 id="service-management" tabindex="-1">Service Management <a class="header-anchor" href="#service-management" aria-label="Permalink to &quot;Service Management&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Stop services</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Restart a specific service</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> restart</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backend</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Rebuild services</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span></span></code></pre></div><h2 id="volume-management" tabindex="-1">Volume Management <a class="header-anchor" href="#volume-management" aria-label="Permalink to &quot;Volume Management&quot;">​</a></h2><p>JobBlaster uses Docker volumes for persistent data:</p><ul><li><code>postgres_data</code>: Database files</li><li><code>redis_data</code>: Redis data</li><li><code>uploads</code>: User uploads</li></ul><h3 id="backup-volumes" tabindex="-1">Backup Volumes <a class="header-anchor" href="#backup-volumes" aria-label="Permalink to &quot;Backup Volumes&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Backup database</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> exec</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -T</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> postgres</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pg_dump</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -U</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jobblaster</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jobblaster</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> &gt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> backup.sql</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Backup uploads</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> cp</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> jobblaster_backend_1:/app/uploads</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ./backup/uploads</span></span></code></pre></div><h2 id="network-configuration" tabindex="-1">Network Configuration <a class="header-anchor" href="#network-configuration" aria-label="Permalink to &quot;Network Configuration&quot;">​</a></h2><p>Services communicate over an internal Docker network. Default ports:</p><ul><li>Frontend: 5173 (dev), 80 (prod)</li><li>Backend: 3000</li><li>PostgreSQL: 5432</li><li>Redis: 6379</li></ul><h3 id="custom-port-configuration" tabindex="-1">Custom Port Configuration <a class="header-anchor" href="#custom-port-configuration" aria-label="Permalink to &quot;Custom Port Configuration&quot;">​</a></h3><p>To use different ports, update the <code>DOCKER_*_PORT</code> variables in <code>.env</code> and rebuild:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> down</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --build</span></span></code></pre></div><h2 id="production-deployment" tabindex="-1">Production Deployment <a class="header-anchor" href="#production-deployment" aria-label="Permalink to &quot;Production Deployment&quot;">​</a></h2><p>For production deployment:</p><ol><li>Use production Docker Compose file:</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.yml</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -f</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-compose.prod.yml</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> up</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span></span></code></pre></div><ol start="2"><li>Enable SSL/TLS:</li></ol><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add to docker-compose.prod.yml</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">services</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  nginx</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    image</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">nginx:alpine</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    volumes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./nginx.conf:/etc/nginx/nginx.conf</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">./ssl:/etc/nginx/ssl</span></span></code></pre></div><ol start="3"><li>Set production environment variables:</li></ol><div class="language-env vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">env</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>NODE_ENV=production</span></span>
<span class="line"><span>VITE_API_URL=https://your-domain.com/api</span></span></code></pre></div><h2 id="troubleshooting" tabindex="-1">Troubleshooting <a class="header-anchor" href="#troubleshooting" aria-label="Permalink to &quot;Troubleshooting&quot;">​</a></h2><h3 id="common-issues" tabindex="-1">Common Issues <a class="header-anchor" href="#common-issues" aria-label="Permalink to &quot;Common Issues&quot;">​</a></h3><ol><li><p><strong>Container fails to start</strong></p><ul><li>Check logs: <code>docker-compose logs service_name</code></li><li>Verify port availability</li><li>Check resource limits</li></ul></li><li><p><strong>Database connection issues</strong></p><ul><li>Verify PostgreSQL container is running</li><li>Check database credentials</li><li>Ensure migrations are applied</li></ul></li><li><p><strong>Volume permission issues</strong></p><ul><li>Check container user permissions</li><li>Verify host directory permissions</li><li>Use <code>chown</code> if needed</li></ul></li></ol><h3 id="health-checks" tabindex="-1">Health Checks <a class="header-anchor" href="#health-checks" aria-label="Permalink to &quot;Health Checks&quot;">​</a></h3><p>Monitor container health:</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> stats</span></span></code></pre></div><h2 id="next-steps" tabindex="-1">Next Steps <a class="header-anchor" href="#next-steps" aria-label="Permalink to &quot;Next Steps&quot;">​</a></h2><ul><li><a href="/jobblaster/guide/configuration">Application Configuration</a></li><li><a href="/jobblaster/user-guide/interface">User Guide</a></li><li><a href="/jobblaster/api/">API Documentation</a></li><li><a href="/jobblaster/development/contributing">Development Guide</a></li></ul>`,54)]))}const g=a(t,[["render",l]]);export{c as __pageData,g as default};
